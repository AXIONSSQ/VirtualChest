buildscript {
    repositories {
        jcenter()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'minecrell'
            url = 'http://repo.minecrell.net/releases'
        }
        maven {
            name = 'javalite'
            url = 'http://repo.javalite.io'
        }
    }
    dependencies {
        classpath 'net.minecrell:VanillaGradle:2.0.3_1'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.javalite:activejdbc-gradle-plugin:1.4.13-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'org.javalite.activejdbc'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'net.minecrell.vanilla.server.library'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def getGitHash = {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getReleaseDate = {
    // noinspection UnnecessaryQualifiedReference
    def format = new java.text.SimpleDateFormat('yyyy-MM-dd') // RFC 3339
    return format.format(new Date())
}

repositories {
    mavenCentral()
    maven {
        name = 'sponge'
        url = 'http://repo.spongepowered.org/maven'
    }
    maven {
        name = 'bstats-repo'
        url = 'http://repo.bstats.org/content/repositories/releases'
    }
    maven {
        name = 'javalite'
        url = 'http://repo.javalite.io'
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io'
    }
}

version = '1.0.0-rc-1'
archivesBaseName = 'VirtualChest'
group = 'com.github.ustc_zzzz.virtualchest'

minecraft {
    version = '1.12.2'
    mappings = 'snapshot_20171003'

    replace '@version@', project.version
    replace '@git_hash@', getGitHash()
    replace '@release_date@', getReleaseDate()
}

task apiJar(type: Jar, dependsOn: sourceJar) {
    from 'build/sources/api/java/'
    baseName = 'VirtualChestAPI'

    from 'api/LICENSE'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from 'build/docs/javadoc/'
    classifier = 'javadoc'
}

artifacts {
    archives apiJar
    archives shadowJar
    archives sourceJar
    archives javadocJar
}

dependencies {
    compile 'org.bstats:bstats-sponge:1.2'
    compile 'org.javalite:activejdbc:1.4.13-SNAPSHOT'

    compile 'org.spongepowered:spongeapi:7.1.0-SNAPSHOT'
    compile 'org.spongepowered:spongecommon:7.1.0-SNAPSHOT:dev'
    compile 'com.github.rojo8399:PlaceholderAPI:master-SNAPSHOT'
}

sourceSets {
    main {
        java.srcDir 'src/'
        java.srcDir 'api/'
        resources.srcDir 'resources/'
    }
    api {
        java.srcDir 'api/'
    }
}

shadowJar {
    classifier = null

    dependencies {
        // noinspection GroovyAssignabilityCheck
        include dependency('org.bstats:.*')
        // noinspection GroovyAssignabilityCheck
        include dependency('org.javalite:.*')
    }

    relocate 'org.bstats', project.group.toString() + '.util.repackage.org.bstats'
    relocate 'org.javalite', project.group.toString() + '.util.repackage.org.javalite'
}

reobf {
    jar {
        mappingType = 'SEARGE'
    }
}

reobfJar.dependsOn shadowJar
